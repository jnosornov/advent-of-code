name: pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: install pnpm
        uses: pnpm/action-setup@v4
    
      - name: setup NODE JS using .nvmrc version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install dependencies
        run: pnpm install

      - name: check vulnerabilities with sync
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install pnpm
        uses: pnpm/action-setup@v4
    
      - name: setup NODE JS using .nvmrc version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install dependencies
        run: pnpm install

      - name: generate coverage report
        run: pnpm coverage
        continue-on-error: true

      - name: upload coverage report
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          flags: unittests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install pnpm
        uses: pnpm/action-setup@v4
    
      - name: setup NODE JS using .nvmrc version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install dependencies
        run: pnpm install

      - name: code linting
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install pnpm
        uses: pnpm/action-setup@v4
    
      - name: setup NODE JS using .nvmrc version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install dependencies
        run: pnpm install

      - name: test
        run: pnpm test

  deploy:
    if: github.event_name == 'push'
    needs: [lint, test, security]
    runs-on: ubuntu-latest
    steps:
      - name: deploy to Render
        run: curl ${{ secrets.RENDER_HOOK }}